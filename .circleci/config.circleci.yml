# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version here
      # - image: circleci/elixir:1.5.3
      - image: elixir:1.4.2-slim

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: uname
          command: uname -a && cat /etc/*-release

      - run:
          name: Install os packages
          command: |
            sudo apt-get update &&
            sudo apt-get upgrade -y &&
            sudo apt-get install -y zip curl wget git make sudo openssl libssl-dev build-essential libc6-dev

      - run:
          name: Install npm
          command: |
            sudo apt-get install -y nodejs npm &&
            sudo npm cache clean &&
            sudo npm install n -g &&
            sudo npm update npm -g &&
            sudo n stable &&
            sudo ln -sf /usr/local/bin/node /usr/bin/node &&
            sudo ln -sf /usr/local/bin/npm /usr/bin/npm

      - run:
          name: Install Phoenix
          working_directory: ~/repo/exmail
          environment:
            MIX_ENV: prod
          command: |
            mix archive.install --force http://github.com/phoenixframework/archives/raw/master/phoenix_new-1.2.1.ez &&
            yes | mix do deps.get, compile

      - run:
          name: Build npm packages
          working_directory: ~/repo/exmail
          environment:
            MIX_ENV: prod
          command: |
            hash -r &&
            npm install && npm install bower &&
            node node_modules/bower/bin/bower install --allow-root &&
            node node_modules/brunch/bin/brunch build

      - run:
          name: Build Exmail application
          working_directory: ~/repo/exmail
          environment:
            MIX_ENV: prod
          command: |
            mix do phoenix.digest, compile &&
            mix sentry_recompile &&
            mix release --env=prod --upgrade --verbose
